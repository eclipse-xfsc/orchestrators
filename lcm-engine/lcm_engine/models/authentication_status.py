# coding: utf-8

from __future__ import absolute_import


from lcm_engine.models.base_model_ import Model
from lcm_engine import util


class AuthenticationStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user_identifier=None, is_logged_in=None):  # noqa: E501
        """AuthenticationStatus - a model defined in OpenAPI

        :param user_identifier: The user_identifier of this AuthenticationStatus.  # noqa: E501
        :type user_identifier: str
        :param is_logged_in: The is_logged_in of this AuthenticationStatus.  # noqa: E501
        :type is_logged_in: bool
        """
        self.openapi_types = {"user_identifier": str, "is_logged_in": bool}

        self.attribute_map = {
            "user_identifier": "userIdentifier",
            "is_logged_in": "isLoggedIn",
        }

        self.user_identifier = user_identifier
        self.is_logged_in = is_logged_in

    @classmethod
    def from_dict(cls, dikt) -> "AuthenticationStatus":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AuthenticationStatus of this AuthenticationStatus.  # noqa: E501
        :rtype: AuthenticationStatus
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_identifier(self):
        """Gets the user_identifier of this AuthenticationStatus.


        :return: The user_identifier of this AuthenticationStatus.
        :rtype: str
        """
        return self._user_identifier

    @user_identifier.setter
    def user_identifier(self, user_identifier):
        """Sets the user_identifier of this AuthenticationStatus.


        :param user_identifier: The user_identifier of this AuthenticationStatus.
        :type user_identifier: str
        """
        if user_identifier is None:
            raise ValueError(
                "Invalid value for `user_identifier`, must not be `None`"
            )  # noqa: E501

        self._user_identifier = user_identifier

    @property
    def is_logged_in(self):
        """Gets the is_logged_in of this AuthenticationStatus.


        :return: The is_logged_in of this AuthenticationStatus.
        :rtype: bool
        """
        return self._is_logged_in

    @is_logged_in.setter
    def is_logged_in(self, is_logged_in):
        """Sets the is_logged_in of this AuthenticationStatus.


        :param is_logged_in: The is_logged_in of this AuthenticationStatus.
        :type is_logged_in: bool
        """
        if is_logged_in is None:
            raise ValueError(
                "Invalid value for `is_logged_in`, must not be `None`"
            )  # noqa: E501

        self._is_logged_in = is_logged_in
