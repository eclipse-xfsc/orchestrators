# coding: utf-8

from __future__ import absolute_import


from lcm_engine.models.base_model_ import Model
from lcm_engine import util


class SecretFile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, path=None, contents=None, contents_hash=None):  # noqa: E501
        """SecretFile - a model defined in OpenAPI

        :param path: The path of this SecretFile.  # noqa: E501
        :type path: str
        :param contents: The contents of this SecretFile.  # noqa: E501
        :type contents: str
        :param contents_hash: The contents_hash of this SecretFile.  # noqa: E501
        :type contents_hash: str
        """
        self.openapi_types = {"path": str, "contents": str, "contents_hash": str}

        self.attribute_map = {
            "path": "path",
            "contents": "contents",
            "contents_hash": "contentsHash",
        }

        self._path = path
        self._contents = contents
        self._contents_hash = contents_hash

    @classmethod
    def from_dict(cls, dikt) -> "SecretFile":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Secret_file of this SecretFile.  # noqa: E501
        :rtype: SecretFile
        """
        return util.deserialize_model(dikt, cls)

    @property
    def path(self):
        """Gets the path of this SecretFile.


        :return: The path of this SecretFile.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this SecretFile.


        :param path: The path of this SecretFile.
        :type path: str
        """

        self._path = path

    @property
    def contents(self):
        """Gets the contents of this SecretFile.

        Base64-encoded contents  # noqa: E501

        :return: The contents of this SecretFile.
        :rtype: str
        """
        return self._contents

    @contents.setter
    def contents(self, contents):
        """Sets the contents of this SecretFile.

        Base64-encoded contents  # noqa: E501

        :param contents: The contents of this SecretFile.
        :type contents: str
        """

        self._contents = contents

    @property
    def contents_hash(self):
        """Gets the contents_hash of this SecretFile.

        The SHA3-512 checksum of the contents encoded as a hexadecimal string  # noqa: E501

        :return: The contents_hash of this SecretFile.
        :rtype: str
        """
        return self._contents_hash

    @contents_hash.setter
    def contents_hash(self, contents_hash):
        """Sets the contents_hash of this SecretFile.

        The SHA3-512 checksum of the contents encoded as a hexadecimal string  # noqa: E501

        :param contents_hash: The contents_hash of this SecretFile.
        :type contents_hash: str
        """

        self._contents_hash = contents_hash
