# coding: utf-8

from __future__ import absolute_import


from lcm_engine.models.base_model_ import Model
from lcm_engine import util


class WorkspaceUserAuthorizationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user=None):  # noqa: E501
        """WorkspaceUserAuthorizationRequest - a model defined in OpenAPI

        :param user: The user of this WorkspaceUserAuthorizationRequest.  # noqa: E501
        :type user: str
        """
        self.openapi_types = {"user": str}

        self.attribute_map = {"user": "user"}

        self.user = user

    @classmethod
    def from_dict(cls, dikt) -> "WorkspaceUserAuthorizationRequest":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The WorkspaceUserAuthorizationRequest of this WorkspaceUserAuthorizationRequest.  # noqa: E501
        :rtype: WorkspaceUserAuthorizationRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user(self):
        """Gets the user of this WorkspaceUserAuthorizationRequest.

        A unique identifier for a user  # noqa: E501

        :return: The user of this WorkspaceUserAuthorizationRequest.
        :rtype: str
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this WorkspaceUserAuthorizationRequest.

        A unique identifier for a user  # noqa: E501

        :param user: The user of this WorkspaceUserAuthorizationRequest.
        :type user: str
        """
        if user is None:
            raise ValueError(
                "Invalid value for `user`, must not be `None`"
            )  # noqa: E501

        self._user = user
