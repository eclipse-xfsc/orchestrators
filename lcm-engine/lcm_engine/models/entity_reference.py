# coding: utf-8

from __future__ import absolute_import


from lcm_engine.models.base_model_ import Model
from lcm_engine import util


class EntityReference(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None):  # noqa: E501
        """EntityReference - a model defined in OpenAPI

        :param id: The id of this EntityReference.  # noqa: E501
        :type id: int
        """
        self.openapi_types = {"id": int}

        self.attribute_map = {"id": "id"}

        self.id = id

    @classmethod
    def from_dict(cls, dikt) -> "EntityReference":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EntityReference of this EntityReference.  # noqa: E501
        :rtype: EntityReference
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this EntityReference.


        :return: The id of this EntityReference.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this EntityReference.


        :param id: The id of this EntityReference.
        :type id: int
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id
