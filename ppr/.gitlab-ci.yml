stages:
  - lint
  - test
  - build

linters:
  stage: lint
  image: ${CI_REGISTRY_IMAGE}/library/python:3.11.0-bullseye
  before_script: &python_setup
    - python3 -m venv .venv
    - source .venv/bin/activate
    - pip --cache-dir .pipcache/ install --upgrade pip wheel
    - pip --cache-dir .pipcache/ install -r requirements.txt -r requirements-dev.txt
    - pip freeze
  script:
    - ./dev.sh lint
  cache: &python_cache
    key: pip-cache-cli
    paths:
      - .pipcache/
    when: always
    policy: pull-push

unit-tests:
  stage: test
  image: ${CI_REGISTRY_IMAGE}/library/python:3.11.0-bullseye
  before_script: *python_setup
  cache: *python_cache
  script:
    - ./dev.sh unit

docker:
  stage: build
  image:
    name: ${CI_REGISTRY_IMAGE}/library/kaniko-project-executor:v1.9.1-debug
    entrypoint: [""]
  script:
    - DOCKER_IMAGE_TAG="latest"
    - if [ -n "$CI_COMMIT_TAG" ]; then DOCKER_IMAGE_TAG="$CI_COMMIT_TAG"; fi
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${DOCKER_IMAGE_TAG}"
      --build-arg "API_VERSION=${DOCKER_IMAGE_TAG}"
      --build-arg "BASE_IMAGE_PREFIX=${CI_REGISTRY_IMAGE}/"
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG
