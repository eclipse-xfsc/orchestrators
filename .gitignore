# Byte-compiled / optimized / DLL files
**/__pycache__/
documentation/*.py[cod]
documentation/*$py.class

# C extensions
documentation/*.so

# Distribution / packaging
documentation/.Python
documentation/build/
documentation/develop-eggs/
documentation/dist/
documentation/downloads/
documentation/eggs/
documentation/.eggs/
documentation/lib/
documentation/lib64/
documentation/parts/
documentation/sdist/
documentation/var/
documentation/wheels/
documentation/share/python-wheels/
documentation/*.egg-info/
documentation/.installed.cfg
documentation/*.egg
documentation/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
documentation/*.manifest
documentation/*.spec

# Installer logs
documentation/pip-log.txt
documentation/pip-delete-this-directory.txt

# Unit test / coverage reports
documentation/htmlcov/
documentation/.tox/
documentation/.nox/
documentation/.coverage
documentation/.coverage.*
documentation/.cache
documentation/nosetests.xml
documentation/coverage.xml
documentation/*.cover
documentation/*.py,cover
documentation/.hypothesis/
documentation/.pytest_cache/
documentation/cover/

# Translations
documentation/*.mo
documentation/*.pot

# Django stuff:
documentation/*.log
documentation/local_settings.py
documentation/db.sqlite3
documentation/db.sqlite3-journal

# Flask stuff:
documentation/instance/
documentation/.webassets-cache

# Scrapy stuff:
documentation/.scrapy

# Sphinx documentation
documentation/docs/_build/
documentation/_build/

# PyBuilder
documentation/.pybuilder/
documentation/target/

# Jupyter Notebook
documentation/.ipynb_checkpoints

# IPython
documentation/profile_default/
documentation/ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
documentation/__pypackages__/

# Celery stuff
documentation/celerybeat-schedule
documentation/celerybeat.pid

# SageMath parsed files
documentation/*.sage.py

# Environments
documentation/.env
documentation/.venv
documentation/env/
documentation/venv/
documentation/ENV/
documentation/env.bak/
documentation/venv.bak/

# Spyder project settings
documentation/.spyderproject
documentation/.spyproject

# Rope project settings
documentation/.ropeproject

# mkdocs documentation
documentation/site

# mypy
documentation/.mypy_cache/
documentation/.dmypy.json
documentation/dmypy.json

# Pyre type checker
documentation/.pyre/

# pytype static type analyzer
documentation/.pytype/

# Cython debug symbols
documentation/cython_debug/

# standard IntelliJ ignore
documentation/.idea/











# Created by .ignore support plugin (hsz.mobi)
### Python template
# Byte-compiled / optimized / DLL files
examples/*.py[cod]
examples/*$py.class

# C extensions
examples/*.so

# Distribution / packaging
examples/.Python
examples/build/
examples/develop-eggs/
examples/dist/
examples/downloads/
examples/eggs/
examples/.eggs/
examples/lib/
examples/lib64/
examples/parts/
examples/sdist/
examples/var/
examples/wheels/
examples/pip-wheel-metadata/
examples/share/python-wheels/
examples/*.egg-info/
examples/.installed.cfg
examples/*.egg
examples/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
examples/*.manifest
examples/*.spec

# Installer logs
examples/pip-log.txt
examples/pip-delete-this-directory.txt

# Unit test / coverage reports
examples/htmlcov/
examples/.tox/
examples/.nox/
examples/.coverage
examples/.coverage.*
examples/.cache
examples/nosetests.xml
examples/coverage.xml
examples/*.cover
examples/*.py,cover
examples/.hypothesis/
examples/.pytest_cache/
examples/cover/

# Translations
examples/*.mo
examples/*.pot

# Django stuff:
examples/*.log
examples/local_settings.py
examples/db.sqlite3
examples/db.sqlite3-journal

# Flask stuff:
examples/instance/
examples/.webassets-cache

# Scrapy stuff:
examples/.scrapy

# Sphinx documentation
examples/docs/_build/

# PyBuilder
examples/.pybuilder/
examples/target/

# Jupyter Notebook
examples/.ipynb_checkpoints

# IPython
examples/profile_default/
examples/ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
examples/__pypackages__/

# Celery stuff
examples/celerybeat-schedule
examples/celerybeat.pid

# SageMath parsed files
examples/*.sage.py

# Environments
examples/.env
examples/.venv
examples/env/
examples/venv/
examples/ENV/
examples/env.bak/
examples/venv.bak/

# Spyder project settings
examples/.spyderproject
examples/.spyproject

# Rope project settings
examples/.ropeproject

# mkdocs documentation
examples//site

# mypy
examples/.mypy_cache/
examples/.dmypy.json
examples/dmypy.json

# Pyre type checker
examples/.pyre/

# pytype static type analyzer
examples/.pytype/

# Cython debug symbols
examples/cython_debug/

### Terraform template
# Local .terraform directories
examples/**/.terraform/*

# .tfstate files
examples/*.tfstate
examples/*.tfstate.*

# Crash log files
examples/crash.log

# Ignore any .tfvars files that are generated automatically for each Terraform run. Most
# .tfvars files are managed as part of configuration and so should be included in
# version control.
#
# example.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
examples/override.tf
examples/override.tf.json
examples/*_override.tf
examples/*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
#
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
examples/.terraformrc
examples/terraform.rc

# packages
examples/*.7z
examples/*.dmg
examples/*.gz
examples/*.iso
examples/*.jar
examples/*.rar
examples/*.tar
examples/*.tar.gz
examples/*.zip
examples/*.log.*
examples/*.csar

# standard IntelliJ ignore
examples/.idea/






# Byte-compiled / optimized / DLL files
lcm-engine/*.py[cod]
lcm-engine/*$py.class

# Distribution / packaging
lcm-engine/.Python
lcm-engine/build/
lcm-engine/develop-eggs/
lcm-engine/dist/
lcm-engine/downloads/
lcm-engine/eggs/
lcm-engine/.eggs/
lcm-engine/lib/
lcm-engine/lib64/
lcm-engine/parts/
lcm-engine/sdist/
lcm-engine/var/
lcm-engine/wheels/
lcm-engine/share/python-wheels/
lcm-engine/*.egg-info/
lcm-engine/.installed.cfg
lcm-engine/*.egg
lcm-engine/MANIFEST

# PyInstaller
lcm-engine/*.manifest
lcm-engine/*.spec

# Installer logs
lcm-engine/pip-log.txt
lcm-engine/pip-delete-this-directory.txt

# Unit test / coverage reports
lcm-engine/htmlcov/
lcm-engine/.tox/
lcm-engine/.nox/
lcm-engine/.coverage
lcm-engine/.coverage.*
lcm-engine/.cache
lcm-engine/nosetests.xml
lcm-engine/coverage.xml
lcm-engine/*.cover
lcm-engine/*.py,cover
lcm-engine/.hypothesis/
lcm-engine/.pytest_cache/
lcm-engine/cover/

# PyBuilder
lcm-engine/.pybuilder/
lcm-engine/target/

# pyenv
lcm-engine/.python-version

# pipenv
lcm-engine/Pipfile.lock

# Environments
lcm-engine/.env
lcm-engine/.venv
lcm-engine/.venv*
lcm-engine/env/
lcm-engine/venv/
lcm-engine/venv*
lcm-engine/ENV/
lcm-engine/env.bak/
lcm-engine/venv.bak/

# mypy
lcm-engine/.mypy_cache/
lcm-engine/.dmypy.json
lcm-engine/dmypy.json

# packages
lcm-engine/*.7z
lcm-engine/*.dmg
lcm-engine/*.gz
lcm-engine/*.iso
lcm-engine/*.jar
lcm-engine/*.rar
lcm-engine/*.tar
lcm-engine/*.tar.gz
lcm-engine/*.zip
lcm-engine/*.log.*
lcm-engine/*.csar

# default opera storage folder
lcm-engine/.opera

# default opera-api storage folder
lcm-engine/.opera-api

# standard IntelliJ ignore
lcm-engine/.idea/
lcm-engine/*.iml

# OpenAPI generator files
lcm-engine/gen/
lcm-engine/src/opera/api/openapi/







# Byte-compiled / optimized / DLL files
ppr/*.py[cod]
ppr/*$py.class

# Distribution / packaging
ppr/.Python
ppr/build/
ppr/develop-eggs/
ppr/dist/
ppr/downloads/
ppr/eggs/
ppr/.eggs/
ppr/lib/
ppr/lib64/
ppr/parts/
ppr/sdist/
ppr/var/
ppr/wheels/
ppr/share/python-wheels/
ppr/*.egg-info/
ppr/.installed.cfg
ppr/*.egg
ppr/MANIFEST

# PyInstaller
ppr/*.manifest
ppr/*.spec

# Installer logs
ppr/pip-log.txt
ppr/pip-delete-this-directory.txt

# Unit test / coverage reports
ppr/htmlcov/
ppr/.tox/
ppr/.nox/
ppr/.coverage
ppr/.coverage.*
ppr/.cache
ppr/nosetests.xml
ppr/coverage.xml
ppr/*.cover
ppr/*.py,cover
ppr/.hypothesis/
ppr/.pytest_cache/
ppr/cover/

# PyBuilder
ppr/.pybuilder/
ppr/target/

# pyenv
ppr/.python-version

# pipenv
ppr/Pipfile.lock

# Environments
ppr/.env
ppr/.venv
ppr/.venv*
ppr/env/
ppr/venv/
ppr/venv*
ppr/ENV/
ppr/env.bak/
ppr/venv.bak/

# mypy
ppr/.mypy_cache/
ppr/.dmypy.json
ppr/dmypy.json

# packages
ppr/*.7z
ppr/*.dmg
ppr/*.gz
ppr/*.iso
ppr/*.jar
ppr/*.rar
ppr/*.tar
ppr/*.tar.gz
ppr/*.zip
ppr/*.log.*
ppr/*.csar

# default opera storage folder
ppr/.opera

# default opera-api storage folder
ppr/.opera-api

# standard IntelliJ ignore
ppr/.idea/
ppr/*.iml

# OpenAPI generator files
ppr/gen/
ppr/src/opera/api/openapi/







# Byte-compiled / optimized / DLL files
lcm-service/terraform-lcm-service-api/*.py[cod]
lcm-service/terraform-lcm-service-api/*$py.class

# Distribution / packaging
lcm-service/terraform-lcm-service-api/.Python
lcm-service/terraform-lcm-service-api/build/
lcm-service/terraform-lcm-service-api/develop-eggs/
lcm-service/terraform-lcm-service-api/dist/
lcm-service/terraform-lcm-service-api/downloads/
lcm-service/terraform-lcm-service-api/eggs/
lcm-service/terraform-lcm-service-api/.eggs/
lcm-service/terraform-lcm-service-api/lib/
lcm-service/terraform-lcm-service-api/lib64/
lcm-service/terraform-lcm-service-api/parts/
lcm-service/terraform-lcm-service-api/sdist/
lcm-service/terraform-lcm-service-api/var/
lcm-service/terraform-lcm-service-api/wheels/
lcm-service/terraform-lcm-service-api/share/python-wheels/
lcm-service/terraform-lcm-service-api/*.egg-info/
lcm-service/terraform-lcm-service-api/.installed.cfg
lcm-service/terraform-lcm-service-api/*.egg
lcm-service/terraform-lcm-service-api/MANIFEST

# PyInstaller
lcm-service/terraform-lcm-service-api/*.manifest
lcm-service/terraform-lcm-service-api/*.spec

# Installer logs
lcm-service/terraform-lcm-service-api/pip-log.txt
lcm-service/terraform-lcm-service-api/pip-delete-this-directory.txt

# Unit test / coverage reports
lcm-service/terraform-lcm-service-api/htmlcov/
lcm-service/terraform-lcm-service-api/.tox/
lcm-service/terraform-lcm-service-api/.nox/
lcm-service/terraform-lcm-service-api/.coverage
lcm-service/terraform-lcm-service-api/.coverage.*
lcm-service/terraform-lcm-service-api/.cache
lcm-service/terraform-lcm-service-api/nosetests.xml
lcm-service/terraform-lcm-service-api/coverage.xml
lcm-service/terraform-lcm-service-api/*.cover
lcm-service/terraform-lcm-service-api/*.py,cover
lcm-service/terraform-lcm-service-api/.hypothesis/
lcm-service/terraform-lcm-service-api/.pytest_cache/
lcm-service/terraform-lcm-service-api/cover/

# PyBuilder
lcm-service/terraform-lcm-service-api/.pybuilder/
lcm-service/terraform-lcm-service-api/target/

# pyenv
lcm-service/terraform-lcm-service-api/.python-version

# pipenv
lcm-service/terraform-lcm-service-api/Pipfile.lock

# Environments
lcm-service/terraform-lcm-service-api/.env
lcm-service/terraform-lcm-service-api/.venv
lcm-service/terraform-lcm-service-api/.venv*
lcm-service/terraform-lcm-service-api/env/
lcm-service/terraform-lcm-service-api/venv/
lcm-service/terraform-lcm-service-api/venv*
lcm-service/terraform-lcm-service-api/ENV/
lcm-service/terraform-lcm-service-api/env.bak/
lcm-service/terraform-lcm-service-api/venv.bak/

# mypy
lcm-service/terraform-lcm-service-api/.mypy_cache/
lcm-service/terraform-lcm-service-api/.dmypy.json
lcm-service/terraform-lcm-service-api/dmypy.json

# packages
lcm-service/terraform-lcm-service-api/*.7z
lcm-service/terraform-lcm-service-api/*.dmg
lcm-service/terraform-lcm-service-api/*.gz
lcm-service/terraform-lcm-service-api/*.iso
lcm-service/terraform-lcm-service-api/*.jar
lcm-service/terraform-lcm-service-api/*.rar
lcm-service/terraform-lcm-service-api/*.tar
lcm-service/terraform-lcm-service-api/*.tar.gz
lcm-service/terraform-lcm-service-api/*.zip
lcm-service/terraform-lcm-service-api/*.log.*
lcm-service/terraform-lcm-service-api/*.csar

# default opera storage folder
lcm-service/terraform-lcm-service-api/.opera

# default opera-api storage folder
lcm-service/terraform-lcm-service-api/.opera-api

# standard IntelliJ ignore
lcm-service/terraform-lcm-service-api/.idea/
lcm-service/terraform-lcm-service-api/*.iml

# OpenAPI generator files
lcm-service/terraform-lcm-service-api/gen/
lcm-service/terraform-lcm-service-api/src/opera/api/openapi/






# Byte-compiled / optimized / DLL files
lcm-service/tosca-xopera-lcm-service-api/*.py[cod]
lcm-service/tosca-xopera-lcm-service-api/*$py.class

# Distribution / packaging
lcm-service/tosca-xopera-lcm-service-api/.Python
lcm-service/tosca-xopera-lcm-service-api/build/
lcm-service/tosca-xopera-lcm-service-api/develop-eggs/
lcm-service/tosca-xopera-lcm-service-api/dist/
lcm-service/tosca-xopera-lcm-service-api/downloads/
lcm-service/tosca-xopera-lcm-service-api/eggs/
lcm-service/tosca-xopera-lcm-service-api/.eggs/
lcm-service/tosca-xopera-lcm-service-api/lib/
lcm-service/tosca-xopera-lcm-service-api/lib64/
lcm-service/tosca-xopera-lcm-service-api/parts/
lcm-service/tosca-xopera-lcm-service-api/sdist/
lcm-service/tosca-xopera-lcm-service-api/var/
lcm-service/tosca-xopera-lcm-service-api/wheels/
lcm-service/tosca-xopera-lcm-service-api/share/python-wheels/
lcm-service/tosca-xopera-lcm-service-api/*.egg-info/
lcm-service/tosca-xopera-lcm-service-api/.installed.cfg
lcm-service/tosca-xopera-lcm-service-api/*.egg
lcm-service/tosca-xopera-lcm-service-api/MANIFEST

# PyInstaller
lcm-service/tosca-xopera-lcm-service-api/*.manifest
lcm-service/tosca-xopera-lcm-service-api/*.spec

# Installer logs
lcm-service/tosca-xopera-lcm-service-api/pip-log.txt
lcm-service/tosca-xopera-lcm-service-api/pip-delete-this-directory.txt

# Unit test / coverage reports
lcm-service/tosca-xopera-lcm-service-api/htmlcov/
lcm-service/tosca-xopera-lcm-service-api/.tox/
lcm-service/tosca-xopera-lcm-service-api/.nox/
lcm-service/tosca-xopera-lcm-service-api/.coverage
lcm-service/tosca-xopera-lcm-service-api/.coverage.*
lcm-service/tosca-xopera-lcm-service-api/.cache
lcm-service/tosca-xopera-lcm-service-api/nosetests.xml
lcm-service/tosca-xopera-lcm-service-api/coverage.xml
lcm-service/tosca-xopera-lcm-service-api/*.cover
lcm-service/tosca-xopera-lcm-service-api/*.py,cover
lcm-service/tosca-xopera-lcm-service-api/.hypothesis/
lcm-service/tosca-xopera-lcm-service-api/.pytest_cache/
lcm-service/tosca-xopera-lcm-service-api/cover/

# PyBuilder
lcm-service/tosca-xopera-lcm-service-api/.pybuilder/
lcm-service/tosca-xopera-lcm-service-api/target/

# pyenv
lcm-service/tosca-xopera-lcm-service-api/.python-version

# pipenv
lcm-service/tosca-xopera-lcm-service-api/Pipfile.lock

# Environments
lcm-service/tosca-xopera-lcm-service-api/.env
lcm-service/tosca-xopera-lcm-service-api/.venv
lcm-service/tosca-xopera-lcm-service-api/.venv*
lcm-service/tosca-xopera-lcm-service-api/env/
lcm-service/tosca-xopera-lcm-service-api/venv/
lcm-service/tosca-xopera-lcm-service-api/venv*
lcm-service/tosca-xopera-lcm-service-api/ENV/
lcm-service/tosca-xopera-lcm-service-api/env.bak/
lcm-service/tosca-xopera-lcm-service-api/venv.bak/

# mypy
lcm-service/tosca-xopera-lcm-service-api/.mypy_cache/
lcm-service/tosca-xopera-lcm-service-api/.dmypy.json
lcm-service/tosca-xopera-lcm-service-api/dmypy.json

# packages
lcm-service/tosca-xopera-lcm-service-api/*.7z
lcm-service/tosca-xopera-lcm-service-api/*.dmg
lcm-service/tosca-xopera-lcm-service-api/*.gz
lcm-service/tosca-xopera-lcm-service-api/*.iso
lcm-service/tosca-xopera-lcm-service-api/*.jar
lcm-service/tosca-xopera-lcm-service-api/*.rar
lcm-service/tosca-xopera-lcm-service-api/*.tar
lcm-service/tosca-xopera-lcm-service-api/*.tar.gz
lcm-service/tosca-xopera-lcm-service-api/*.zip
lcm-service/tosca-xopera-lcm-service-api/*.log.*
lcm-service/tosca-xopera-lcm-service-api/*.csar

# default opera storage folder
lcm-service/tosca-xopera-lcm-service-api/.opera

# default opera-api storage folder
lcm-service/tosca-xopera-lcm-service-api/.opera-api

# standard IntelliJ ignore
lcm-service/tosca-xopera-lcm-service-api/.idea/
lcm-service/tosca-xopera-lcm-service-api/*.iml

# OpenAPI generator files
lcm-service/tosca-xopera-lcm-service-api/gen/
lcm-service/tosca-xopera-lcm-service-api/src/opera/api/openapi/
